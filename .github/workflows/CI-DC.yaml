name: Continuous Integration and Deployment
on:
  push:
    branches:
      - main # Desplegar solo en la rama principal

env:
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }} # Token de acceso a Vercel
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }} # ID de la organización de Vercel
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }} # ID del proyecto de Vercel

jobs:
  build:
    runs-on: ubuntu-latest # Usar un contenedor de Ubuntu para ejecutar el flujo de trabajo

    if: github.ref == 'refs/heads/main' # Solo ejecutar en la rama principal
    steps:
      - name: Checkout del código fuente
        uses: actions/checkout@v3   # Usar la acción de verificación para obtener el código fuente

      - name: Installe Node.js 20.x # Instalar Node.js
        uses: actions/setup-node@v3 # Usar la acción de configuración de Node.js
        with:
          node-version: 20.x # Especificar la versión de Node.js

      - name: Instalar dependencias # Instalar dependencias del proyecto
        run: npm install # Ejecutar el comando de instalación de npm

      - name: Build # Construir el proyecto
        run: npm run build # Ejecutar el comando de construcción de npm

  Deploy:
    needs: Build # Este trabajo depende del trabajo de construcción
    runs-on: ubuntu-latest # Usar un contenedor de Ubuntu para ejecutar el flujo de trabajo
    if: github.ref == 'refs/heads/main' # Solo ejecutar en la rama principal
    steps:
      - uses: actions/checkout@v3 # Usar la acción de verificación para obtener el código fuente
      - name: Instalar Node.js 20.x # Instalar Node.js
        uses: actions/setup-node@v3 # Usar la acción de configuración de Node.js
        with:
          node-version: 20.x # Especificar la versión de Node.js
      - name: Install vercel CLI # Instalar la CLI de Vercel
        run: npm install -g vercel # Ejecutar el comando de instalación global de npm para Vercel
      - name: Pull Vercel Environment Variables # Obtener las variables de entorno de Vercel
        run: vercel pull --yes --token=${{ secrets.VERCEL_TOKEN }} # Ejecutar el comando de extracción de Vercel con el token de acceso
      - name: Deploy to Vercel # Desplegar en Vercel
        run: vercel deploy --no-wait --token=${{ secrets.VERCEL_TOKEN }}  # Ejecutar el comando de despliegue de Vercel con los tokens y IDs necesarios